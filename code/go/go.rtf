{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset0 Georgia;\f1\fnil\fcharset0 HelveticaNeue;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red35\green52\blue65;\red255\green255\blue255;\red117\green149\blue174;
\red14\green115\blue176;\red63\green96\blue123;\red240\green244\blue246;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww14200\viewh16520\viewkind0
\deftab720
\pard\pardeftab720\sl920
{\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/go/"}}{\fldrslt 
\f0\b\fs72 \cf2 \cb3 go}}
\f0\b\fs72 \cf2 \cb3 \
\pard\pardeftab720\sl480
{\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/go/"}}{\fldrslt 
\f1\b0\fs30 \cf4 Jul 19, 2014}}
\f1\b0\fs30 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf4 		{\field{\*\fldinst{HYPERLINK "https://wordpress.com/tag/bash"}}{\fldrslt bash}}{\field{\*\fldinst{HYPERLINK "https://wordpress.com/tag/tty"}}{\fldrslt tty}}\
\pard\pardeftab720\sl540\sa480
{\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\f0\b\fs32 \cf5 go}}
\f0\fs32 \cf2  is a terminal utility that allows you to go to directories far from your current directory. One need only type the name of the directory, and go will search for it and take you there.\
{\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}} is meant to replace tedious use of \'91cd\'92. {\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}} is similar to popular launchers like Alfred or Quicksilver, but it is for use in the terminal (tested in bash).\
To use {\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}}, click {\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}} to download, place it in 
\b /your/personal/bin
\b0 , g-unzip it, and add the following line to your 
\b ~/.bash_profile
\b0 :\
\pard\pardeftab720\sl540
\cf6 (linequote)\
source /your/personal/bin/go\
\pard\pardeftab720\sl540\sa480
{\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}}\cf2  uses the variable 
\b $GOPATH
\b0  to determine where it will search for directories. It will search those directories in the order they appear, just like your environment 
\b $PATH
\b0  variable. Open up the {\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}} file in a text editor to change the 
\b $GOPATH
\b0  to fit your computer. You may also change the depth that {\field{\*\fldinst{HYPERLINK "http://code.instructorium.com/downloads/go.gz"}}{\fldrslt 
\b \cf5 go}} searches.\
Here is the code in its entirety:\
\pard\pardeftab720\sl480

\f2\fs30 \cf2 \cb7 # state the desired paths that go will search in. The default depth to search in each path is 4, but this may be changed in find_go()\
# input each path on a separate line\
GOPATH="$HOME\
$HOME/Dropbox\
/"\
\
# given path and dir, run find. if nonempty, take the first entry, cd, pwd, exit\
find_go() \{\
    DEPTH=4\
    SPATH="$1"\
    DIR="$2"; shift\
    until [ -z "$2" ] # concatenate args with a space\
    do\
        DIR="$DIR $2"; shift\
    done\
    FINDS=$(find "$SPATH" -maxdepth $DEPTH -name "$DIR" 2>/dev/null)\
    IFS=$'\\n' # interpolation necessary b/c '' will make \\ and n field separators.\
    for FIND in $FINDS # although this is a loop, the goal is to take the first entry if there is one\
    do\
        # cd to first entry, pwd, exit\
        cd "$FIND"\
        pwd\
        IFS=$' \\t\\n'\
        return 0 # success! we found the match!\
    done\
    IFS=$' \\t\\n'\
    return 1 # failure. we didn't find it in this path.\
\}\
\
go() \{\
    for SPATH in $GOPATH # foreach path, go to the inputted directory if possible\
    do\
        find_go "$SPATH" $@ && return # if we successfully went to the directory, exit the program\
    done\
\}\
}